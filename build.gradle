//buildscript {
//    repositories {
//        jcenter()
//        mavenCentral()
//    }
//    dependencies {
//        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
//    }
//}

plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}
apply plugin: 'java'
//apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

//configurations {
//    extraLibs
//}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://repo.repsy.io/mvn/fadookie/particleman' }
    maven { url 'https://maven.enginehub.org/repo/' }
    maven { url 'https://repo.repsy.io/mvn/gandiber/geckolib' }
    jcenter()
    mavenCentral()
}

//configurations {
//    shade
//}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

//    modImplementation 'software.bernie.geckolib:fabric-1.16.4-geckolib:3.0.0:dev'

//    compile 'com.github.jengelman.gradle.plugins:shadow:4.0.4'

//    shade 'com.eliotlash.molang:molang:SNAPSHOT.12'
//    shade 'com.eliotlash.mclib:mclib:SNAPSHOT.12'
    implementation 'com.eliotlash.molang:molang:SNAPSHOT.12'
    implementation 'com.eliotlash.mclib:mclib:SNAPSHOT.12'
//    compile 'com.github.jengelman.gradle.plugins:shadow:4.0.4'

    // https://mvnrepository.com/artifact/org.json/json
//    compile group: 'org.json', name: 'json', version: '20200518'
//    configurations.compile.extendsFrom(configurations.extraLibs)

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

//jar {
////    manifest {
////        attributes 'Main-Class': 'com.github.lorenzopapi.FlameInstaller'
////    }
//    from {
//        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}

//shadowJar {
//    configurations = [project.configurations.shade]
//    from sourceSets.main.allSource
//
//    relocate 'com.eliotlash', 'software.bernie.shadowed.eliotlash'
//    classifier ''
//}
//
//jar.finalizedBy('shadowJar')
//jar.finalizedBy('reobfJar')